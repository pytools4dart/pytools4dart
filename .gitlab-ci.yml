# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
#  APT_CACHE_DIR: "$CI_PROJECT_DIR/.cache/apt"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/
stages:
  - test
  - deploy


build:conda:
  stage: test
  image: conda/miniconda3:latest
  script:
    - apt-get update -qy
    - apt-get install -y gcc g++
    - conda env create -f environment.yml
    - conda activate pytools4dart
    - cd examples
    - python -c 'import pytools4dart as ptd;ptd.configure("~/DART")'
    - python use_case_0.py
    - python use_case_1.py
    - python use_case_2.py
    - python use_case_3.py
    - python use_case_4.py



build:pip:
  stage: test
  image: python:3.6
  script:
  # this configures Django application to use attached postgres database that is run on `postgres` host
  - ptd=$(pwd)
  - cd ../
  - curl -u $DART_AUTH $DART_URL -o dart.tar.gz
  - tar -xzf dart.tar.gz
  - dest=$(pwd)/$(ls -d DART_*)
  - cd $dest
  - ./install-text.sh $HOME/DART
  - cd $ptd
  - apt-get update -qy
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
    #- mkdir -v $APT_CACHE_DIR
  - apt-get install -y libudunits2-dev libnetcdf-dev libproj-dev libgeos-dev libgdal-dev gfortran libspatialindex-dev libgtk2.0-0 # -o dir::cache::archives="$APT_CACHE_DIR"
  - pip install pybind11 pygdal==2.4.0.5 geopandas Cython
  - pip install -r requirements.txt
  - pip install .
  - cd examples
  - python -c 'import pytools4dart as ptd;ptd.configure("~/DART")'
#  - python use_case_0.py
#  - python use_case_1.py
#  - python use_case_2.py
#  - python use_case_3.py
  - python use_case_4.py
  only:
    - schedules


pages:
  stage: deploy
  script:
    - apt-get update -qy
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    #- mkdir -v $APT_CACHE_DIR
    - apt-get install -y libudunits2-dev libnetcdf-dev libproj-dev libgeos-dev libgdal-dev gfortran libspatialindex-dev # -o dir::cache::archives="$APT_CACHE_DIR"
    - pip install pybind11 pygdal==2.4.0.5 geopandas Cython
    - pip install -r requirements.txt
    - pip install portray
    - portray as_html -c pyproject.toml
    - mv site public
  artifacts:
    paths:
     - public
  only:
   - master

