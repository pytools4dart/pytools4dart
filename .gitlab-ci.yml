.shared_windows_runners:
  tags:
  - shared-windows
  - windows
  - windows-1809

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
#  APT_CACHE_DIR: "$CI_PROJECT_DIR/.cache/apt"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
#cache:
#  paths:
#  - .cache/pip
#  - ptdvenv/
  

stages:
  - build-windows
  - build
  - deploy

build-windows:
  extends:
    - .shared_windows_runners
  stage: build-windows
  script:
    - $env:projectdir = pwd
    - $env:cachedir = "${env:projectdir}\cache"
#    - gitlab-ci\conda-build.ps1
    - mv $env:cachedir\miniconda.tar.gz
    - Measure-Command { tar.exe -xzf miniconda.tar.gz }
    - cd $env:userprofile
    - ls
    - Measure-Command { tar.exe -czf miniconda3.tar.gz miniconda3 }
    - mv miniconda3.tar.gz $env:cachedir\
#    - gitlab-ci\activate-env.ps1
#    - Measure-Command { gitlab-ci\dart-build.ps1 }
#    - Measure-Command { gitlab-ci\ptdvenv-build.ps1 }
#    - cd pytools4dart\examples
#    - python -c "import generateDS; import tinyobj; import gdecomp; import laspy; import pytools4dart"
#    - python use_case_0.py
#    - python use_case_1.py
#    - python use_case_2.py
#    - python use_case_3.py
#    - python use_case_4.py
#    - python use_case_6.py
#    - python use_case_7.py
#    - python use_case_5.py

  cache:
    key: build-win-cache
    paths:
      - cache

#
#    - curl.exe -o Miniconda3-latest-Windows-x86_64.exe https://repo.anaconda.com/miniconda/Miniconda3-latest-Windows-x86_64.exe
#    - dir
#    - Start-Process ./Miniconda3-latest-Windows-x86_64.exe -Args "/InstallationType=JustMe /RegisterPython=0 /S /D=%UserProfile%\Miniconda3" -wait
##    - $env:PATH += "$env:userprofile\Miniconda3;$env:userprofile\Miniconda3\Scripts;"
#    - $env:PATH = "$env:userprofile\Miniconda3\condabin;" + $env:PATH
#    - conda install -y conda-build
#    - conda init powershell
##    - conda create -y -n test python=3.7
##    - conda activate test
##    - $env:conda = "$env:userprofile\miniconda3"
##    - $env:PATH = "${env:conda}\envs\test;${env:conda}\envs\test\Scripts;${env:conda}\envs\test\Library\bin;" + $env:PATH
## #    - & cmd /k "activate ptdvenv" # command not accepted in gitlab-ci...
##    - python --version
##    - conda install -y -n test numpy
##    - python -c "import numpy as np; print(np.arange(10.))"
#    - conda create -y -n ptdvenv -c conda-forge python=3.7 cython gdal geopandas git ipython libspatialindex lxml matplotlib
#    - conda install -y -n ptdvenv -c conda-forge lmfit plyfile pybind11 pyjnius pytest
#    - conda install -y -n ptdvenv -c conda-forge rasterio rtree scipy
#    - $env:conda = "$env:userprofile\miniconda3"
#    - $env:PATH = "${env:conda}\envs\ptdvenv;${env:conda}\envs\ptdvenv\Scripts;${env:conda}\envs\ptdvenv\Library\bin;" + $env:PATH
#    - $env:PATH = "${env:conda}\pkgs\openjdk-11.0.1-1018\Library\bin\server;" + $env:PATH
#    - pip install git+https://gitlab.com/pytools4dart/generateds.git
#    - pip install git+https://gitlab.com/pytools4dart/tinyobj.git
#    - pip install git+https://gitlab.com/pytools4dart/gdecomp.git
#    - pip install git+https://github.com/floriandeboissieu/laspy.git@patch-1
#    - pip install git+https://github.com/jgomezdans/prosail.git
#    - pip install git+https://gitlab.com/pytools4dart/pytools4dart.git@dev
##    - conda install -y -n ptdvenv cython
##      - conda install -y -n ptdvenv
##      - conda install -y -n ptdvenv geopandas
##      - conda install -y -n ptdvenv git
##      - conda install -y -n ptdvenv ipython
##      - conda install -y -n ptdvenv libspatialindex
##
##    - conda env create -f environment.yml
##    - $env:PATH = "${env:conda}\envs\ptdvenv;${env:conda}\envs\ptdvenv\Scripts;${env:conda}\envs\ptdvenv\Library\bin;" + $env:PATH
#    - python --version
#    - python -c "import generateDS; import tinyobj; import gdecomp; import laspy; import pytools4dart"
#    - python -c "from dart_install_win import install_dart; install_dart(r'C:\GitLab-Runner\builds\pytools4dart\pytools4dart\DART_5-7-6_2020-03-06_v1150_windows64', r'C:\GitLab-Runner\builds\pytools4dart\pytools4dart\DART', mode='mv')"
#    - cd pytools4dart\examples





conda-build:
  stage: build
  image: conda/miniconda3:latest
  script:
    - ptd=$(pwd)
    - apt-get update -qy
    - apt-get install -y gcc g++ git unzip libgtk2.0-0 libsm6 libxft2 curl
    - curl -u $DART_AUTH $DART_URL -o dart.tar.gz
    - tar -xzf dart.tar.gz
    - dest=$(pwd)/$(ls -d DART_*)
    - cd $dest
    - ./install-text.sh $HOME/DART
    - cd $ptd
    - conda env create -f environment.yml
    - conda init bash
    - source ~/.bashrc
    - conda activate ptdvenv
    - cd pytools4dart/examples
    - python -c 'import pytools4dart as ptd;ptd.configure("~/DART")'
    - python use_case_0.py
    - python use_case_1.py
    - python use_case_2.py
    - python use_case_3.py
    - python use_case_4.py
  only:
    - schedules
    
pip-build:
  stage: build
  image: python:latest
  script:
    - ptd=$(pwd)
    - apt-get update -qy
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv ptdvenv
    - source ptdvenv/bin/activate
    #- mkdir -v $APT_CACHE_DIR
    - apt-get install -y libudunits2-dev libnetcdf-dev libproj-dev libgeos-dev libgdal-dev gfortran libspatialindex-dev libgtk2.0-0 default-jdk # -o dir::cache::archives="$APT_CACHE_DIR"
    - pip install pybind11 pygdal==2.4.0.5 geopandas Cython
    - pip install -r requirements.txt
    - pip install .
    - ptd=$(pwd)
    - cd ../
    - curl -u $DART_AUTH $DART_URL -o dart.tar.gz
    - tar -xzf dart.tar.gz
    - dest=$(pwd)/$(ls -d DART_*)
    - cd $dest
    - ./install-text.sh $HOME/DART
    - cd $ptd
    - cd pytools4dart/examples
    - python -c 'import pytools4dart as ptd;ptd.configure("~/DART")'
    - python use_case_0.py
    - python use_case_1.py
    - python use_case_2.py
    - python use_case_3.py
    - python use_case_4.py
  only:
    - schedules


pages:
  stage: deploy
  image: python:latest
  script:
    - apt-get update -qy
    - python -V  # Print out python version for debugging
    - pip install virtualenv
    - virtualenv ptdvenv
    - source ptdvenv/bin/activate
    #- mkdir -v $APT_CACHE_DIR
    - apt-get install -y libudunits2-dev libnetcdf-dev libproj-dev libgeos-dev libgdal-dev gfortran libspatialindex-dev libgtk2.0-0 # -o dir::cache::archives="$APT_CACHE_DIR"
    - pip install pybind11 pygdal==2.4.0.5 geopandas Cython
    - pip install -r requirements.txt
    - pip install .
    #- mkdir -v $APT_CACHE_DIR
    - pip install portray python-markdown-math
    - portray as_html -c pyproject.toml
    - mv site public
  artifacts:
    paths:
     - public
  only:
   - master

